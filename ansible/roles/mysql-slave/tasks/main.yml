- name: Check version
  ansible.builtin.shell: > 
      mysql -uroot -e 'SELECT version();'
  register: version
  when: ansible_facts["ansible_hostname"] == "db02"

- name: PRINT OUT THE OUTPUT VARIABLE
  debug:
       var: version.stdout_lines[1]
  when: ansible_facts["ansible_hostname"] == "db02"

- name: PRINT my_var1
  debug:
       var: my_var1
  when: ansible_facts["ansible_hostname"] == "db02"

- name: PRINT my_var2
  debug:
       var: my_var2
  when: ansible_facts["ansible_hostname"] == "db02"

       
- name: Apply config
  template:
    src: templates/my.cnf.j2
    dest: /etc/my.cnf
  when: ansible_facts["ansible_hostname"] == "db02"
  

- name: Restart service mysqld
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    name: mysqld
  when: ansible_facts["ansible_hostname"] == "db02"

- name: Exec cmd Stop slave
  shell: >
     mysql -uroot -e "STOP SLAVE;"
  when: ansible_facts["ansible_hostname"] == "db02"

- name: Exec CHANGE MASTER TO MASTER_HOST
  shell: >
     mysql -uroot -e "CHANGE MASTER TO MASTER_HOST='{{ db1 }}', MASTER_USER='replica', MASTER_PASSWORD='strong_password', MASTER_LOG_FILE='{{ my_var1 }}', MASTER_LOG_POS={{ my_var2 }};"
  when: ansible_facts["ansible_hostname"] == "db02"