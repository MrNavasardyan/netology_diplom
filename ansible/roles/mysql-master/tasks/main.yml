---
# tasks file for mysql-master

- name: (MySQL master) Create a directory for MySQL
  ansible.builtin.file:
    path: /home/mysql
    state: directory

- name: (MySQL master) Download file MySQL
  ansible.builtin.get_url:
    url: http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
    dest: /home/mysql
   
- name: (MySQL master) rpm MySQL
  command: rpm -ivh /home/mysql/mysql-community-release-el7-5.noarch.rpm
  ignore_errors: True

- name: (MySQL master) Install updates
  yum: name=* state=latest

- name: (MySQL master) Install MySQL
  yum:
    name=mysql-server
    state=latest
  
- name: (MySQL master) Start mysqld
  service: name=mysqld state=started enabled=yes

- name: (MySQL master) Check version
  ansible.builtin.shell: > 
      mysql -uroot -e 'SELECT version();'
  register: version

- name: (MySQL master) Print MySQL version
  debug:
       var: version.stdout_lines[1]
       
- name: (MySQL master) Apply MySQL onfig
  template:
    src: templates/my.cnf.j2
    dest: /etc/my.cnf

- name: (MySQL master) Restart service mysqld
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    name: mysqld

- name: (MySQL master) Create user "replica"
  shell: >
     mysql -uroot -e "CREATE USER 'replica'@'{{ db2 }}' IDENTIFIED BY 'replica';"
 
- name: (MySQL master) Grant previllegies
  shell: >
     mysql -uroot -e "GRANT REPLICATION SLAVE ON *.* TO 'replica'@'{{ db2 }}';"
           
- name: (MySQL master) Create database "WORDPRESS"
  shell: >
     mysql -uroot -e "CREATE DATABASE wordpress;"

- name: (MySQL master) Create user "worpdress"
  shell: >
     mysql -uroot -e "CREATE USER 'wordpress'@'{{ app }}' IDENTIFIED BY 'wordpress';" 

- name: (MySQL master) Grant previllegies
  shell: >
     mysql -uroot -e "GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpress'@'{{ app }}';"

- name: (MySQL master) Grant previllegies
  shell: >
     mysql -uroot -e "FLUSH PRIVILEGES;"

- name: (MySQL master) Get "MASTER_LOG_FILE" var
  shell: > 
      mysql -uroot -e "SHOW MASTER STATUS;" | grep mysql-bin | awk '{print $1}'
  register: var1

- name: (MySQL master) Set fact "MASTER_LOG_FILE" var
  set_fact: myvar1="{{ var1.stdout_lines[0] }}"

- name: (MySQL master) Get "MASTER_LOG_POS" var
  shell: > 
      mysql -uroot -e "SHOW MASTER STATUS;" | grep mysql-bin | awk '{print $2}'
  register: var2

- name: (MySQL master) Set fact "MASTER_LOG_POS" var
  set_fact: myvar2="{{ var2.stdout_lines[0] }}"